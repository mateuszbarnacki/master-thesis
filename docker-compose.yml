version: "3.8"

services:
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    restart: on-failure
    depends_on:
      - projects-service
    ports:
      - "8080:8080"
    image: api-gateway:latest

  auth-service:
    build:
      context: ./
      dockerfile: ./auth-service/Dockerfile
    container_name: auth-service
    restart: on-failure
    depends_on:
      - postgres
    ports:
      - "13402:13402"
    image: auth-service:latest

  measurement-get-service:
    build: ./measurement-get-service
    container_name: measurement-get-service
    restart: on-failure
    depends_on:
      - mongodb
    ports:
      - "13404:13404"
    image: measurement-get-service:latest

  measurement-post-service:
    build: ./measurement-post-service
    container_name: measurement-post-service
    restart: on-failure
    depends_on:
      - mongodb
      - projects-service
    ports:
      - "13403:13403"
    image: measurement-post-service:latest

  projects-service:
    build:
      context: ./
      dockerfile: ./projects-service/Dockerfile
    container_name: projects-service
    restart: on-failure
    depends_on:
      - mongodb
    ports:
      - "13401:13401"
    image: projects-service:latest

  mongodb:
    image: mongo:6.0.5
    ports:
      - "27017:27017"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - ./docker-volumes/mongo:/data/db

  postgres:
    image: postgres:15.3
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth
    volumes:
      - ./docker-volumes/postgres/data:/var/lib/postgresql/data
